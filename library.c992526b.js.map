{"mappings":"umBAQA,MAAMA,EAAUC,SAASC,cAAc,gBACvCF,EAAQG,UAAUC,IAAI,UACtB,MAAMC,EAAUJ,SAASC,cAAc,kBACjCI,EAAaL,SAASC,cAAc,gBACpCK,EAAWN,SAASC,cAAc,cAUlCM,EAAkBC,IACtB,MAAMC,EAAS,qGAEsDD,EAAKE,qBACxEF,EAAKG,oBACKH,EAAKI,cAAcJ,EAAKK,kHAI5BL,EAAKI,+EAjBA,CAAAJ,IACb,MAAMM,EAAgB,GACtB,IAAK,MAAMC,KAASP,EAAKQ,OACvBF,EAAcG,KAAKF,EAAMG,MAE3B,OAAOJ,EAAcK,KAAK,OAelBC,CAAOZ,QAAWA,EAAKa,aAAaC,MAAM,KAAK,6CAKvDlB,EAAQmB,mBAAmB,YAAad,EAAA,EAiD1Ce,EAAAC,oBAEArB,EAAQsB,iBAAiB,SAZzBC,eAA4BC,GAC1BA,EAAIC,iBACJ,IACE,MAAMC,QAAiBC,EAAAC,gBAAoBJ,EAAIK,OAAOpB,IACtDqB,EAAAC,mBAAiCL,EAGnC,CAFE,MAAOM,GACPC,QAAQC,IAAIF,EACd,CACF,IAMA/B,EAAWqB,iBAAiB,SAlDD,KAGzB,GAFA3B,EAAQG,UAAUqC,OAAO,UACzBnC,EAAQoC,UAAY,GACyBC,MAAzCC,aAAaC,QAAQ,iBAEvB,OADA5C,EAAQG,UAAUC,IAAI,UACfyC,EAAAC,GAASC,OAAOC,KAAK,8BAE9BvB,EAAAwB,mBAAyBC,KAAIC,IAC3BnB,EAAAC,gBACmBkB,GAChBC,MAAK3C,IACJT,EAAQG,UAAUC,IAAI,UACtBI,EAAgBC,EAAA,IAEjB4C,OAAMhB,GAASC,QAAQD,MAAMA,IAAA,GAClC,IAoCF9B,EAASoB,iBAAiB,SAjCA,KAGxB,GAFA3B,EAAQG,UAAUqC,OAAO,UACzBnC,EAAQoC,UAAY,GACwBC,MAAxCC,aAAaC,QAAQ,gBAEvB,OADA5C,EAAQG,UAAUC,IAAI,UACfyC,EAAAC,GAASC,OAAOC,KAAK,8BAE9BvB,EAAA6B,kBAAwBJ,KAAIC,IAC1BnB,EAAAC,gBACmBkB,GAChBC,MAAK3C,IACJT,EAAQG,UAAUC,IAAI,UACtBI,EAAgBC,EAAA,IAEjB4C,OAAMhB,GAASC,QAAQD,MAAMA,IAAA,GAClC","sources":["src/library.js"],"sourcesContent":["import './sass/main.scss';\nimport Notiflix from 'notiflix';\nimport * as local from './JS/local_storage';\nimport * as api from './JS/api_films_database';\nimport * as filmsCard from './JS/film_cards';\nimport * as modalCardFilm from './JS/modal_card_film';\nimport * as studentsInfo from './JS/modal_footer';\n\nconst spinner = document.querySelector('.loader__div');\nspinner.classList.add('hidden');\nconst gallery = document.querySelector('.section-films');\nconst watchedBtn = document.querySelector('#watched-btn');\nconst queueBtn = document.querySelector('#queue-btn');\n\nconst genres = film => {\n  const arrayOfGenres = [];\n  for (const genre of film.genres) {\n    arrayOfGenres.push(genre.name);\n  }\n  return arrayOfGenres.join(', ');\n};\n\nconst createFilmCards = film => {\n  const markup = `\n  <div class=\"film-card\">\n    <img class=\"film-card__img\" src=\"https://image.tmdb.org/t/p/w500/${film.poster_path}\" alt=\"${\n    film.overview\n  }\" title=\"${film.title}\" ID=\"${film.id}\" loading=\"lazy\"/>\n\n    <div class=\"film-card__info\">\n        <p class=\"film-card__info--title\">\n        ${film.title}\n        </p>\n        <p class=\"film-card__info--subtitle\">\n        ${genres(film)} | ${film.release_date.split('-')[0]}\n        </p>\n    </div>\n</div>\n</a>`;\n  gallery.insertAdjacentHTML('beforeend', markup);\n};\n\nconst handleClickWatched = () => {\n  spinner.classList.remove('hidden');\n  gallery.innerHTML = '';\n  if (localStorage.getItem('watchedMovies') == undefined) {\n    spinner.classList.add('hidden');\n    return Notiflix.Notify.info('Sorry! Your list is empty!');\n  }\n  local.getWatchedMovies().map(index => {\n    api\n      .fetchMoviesByID(index)\n      .then(film => {\n        spinner.classList.add('hidden');\n        createFilmCards(film);\n      })\n      .catch(error => console.error(error));\n  });\n};\n\nconst handleClickQueued = () => {\n  spinner.classList.remove('hidden');\n  gallery.innerHTML = '';\n  if (localStorage.getItem('queuedMovies') == undefined) {\n    spinner.classList.add('hidden');\n    return Notiflix.Notify.info('Sorry! Your list is empty!');\n  }\n  local.getQueuedMovies().map(index => {\n    api\n      .fetchMoviesByID(index)\n      .then(film => {\n        spinner.classList.add('hidden');\n        createFilmCards(film);\n      })\n      .catch(error => console.error(error));\n  });\n};\n\nasync function openCardFilm(eve) {\n  eve.preventDefault();\n  try {\n    const infoFilm = await api.fetchMoviesByID(eve.target.id);\n    modalCardFilm.createModalContent(infoFilm);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nlocal.checkLocalStorage();\n\ngallery.addEventListener('click', openCardFilm);\n\nwatchedBtn.addEventListener('click', handleClickWatched);\nqueueBtn.addEventListener('click', handleClickQueued);\n\n/* `<div class=\"film-card\">\n        <img class=\"film-card__img\" src=\"https://image.tmdb.org/t/p/w500${\n          film.poster_path\n        }\" alt=\"poster of ${film.title}\" loading=\"lazy\"/>\n        <div class=\"film-card__info\">\n            <p class=\"film-card__info--title\">\n            ${film.title}\n            </p>\n            <p class=\"film-card__info--subtitle\">\n            ${genres(film)} | ${film.release_date.split('-')[0]}\n            </p>\n        </div>\n    </div>` */\n"],"names":["$9a8afeea60b9dfd3$var$spinner","document","querySelector","classList","add","$9a8afeea60b9dfd3$var$gallery","$9a8afeea60b9dfd3$var$watchedBtn","$9a8afeea60b9dfd3$var$queueBtn","$9a8afeea60b9dfd3$var$createFilmCards","film","markup","poster_path","overview","title","id","arrayOfGenres","genre","genres","push","name","join","$9a8afeea60b9dfd3$var$genres","release_date","split","insertAdjacentHTML","$ezQ3Q","checkLocalStorage","addEventListener","async","eve","preventDefault","infoFilm","$5zJd0","fetchMoviesByID","target","$hfaIS","createModalContent","error","console","log","remove","innerHTML","undefined","localStorage","getItem","$parcel$interopDefault","$7IoHk","Notify","info","getWatchedMovies","map","index","then","catch","getQueuedMovies"],"version":3,"file":"library.c992526b.js.map"}