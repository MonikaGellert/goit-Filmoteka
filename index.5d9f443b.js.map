{"mappings":"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","sources":["src/index.js","src/JS/select_page.js"],"sourcesContent":["/************************************************************************************************************************************************/\nimport * as api from './JS/api_films_database';\nimport * as filmsCard from './JS/film_cards';\nimport * as functionsProject from './JS/info_functions';\nimport * as modalCardFilm from './JS/modal_card_film';\nimport * as studentsInfo from './JS/modal_footer';\nimport { substractingArrow, addingArrow, selectPages, createPageHome } from './JS/select_page';\nimport './sass/main.scss';\n\n/************************************************************************************************************************************************/\nconst searchForm = document.querySelector('#search-form');\nconst input = document.querySelector('.search-form__input');\nconst cardsFilm = document.querySelector('.section-films');\n//const studentsModal = document.querySelector('#studentsModal');\nconst spinner = document.querySelector('.loader__div');\n\nlet plusArrow = document.querySelector('#plus');\nlet minusArrow = document.querySelector('#minus');\nlet boxPages = document.querySelector('.page');\nlet searchMovie = \"\";\n\n/************************************************************************************************************************************************/\nsearchForm.addEventListener('submit', searchFilms);\ncardsFilm.addEventListener('click', openCardFilm);\n//studentsModal.addEventListener('click', openCardFilm);\n/************************************************************************************************************************************************/\nspinner.classList.add('hidden');\nconst createFilmCards = film => {\n  let imgSRC = api.IMG_URL + film.poster_path;\n  if (film.poster_path == null || film.poster_path == undefined) {\n    imgSRC = 'https://www.freeiconspng.com/uploads/no-image-icon-6.png';\n  }\n\n  const markup = `\n  <div class=\"film-card\">\n    <img class=\"film-card__img\" src=\"${imgSRC}\" alt=\" Poster of a movie titled '${\n    film.title\n  }'\" title=\"${film.title}\" ID=\"${film.id}\" loading=\"lazy\"/>\n\n    <div class=\"film-card__info\">\n        <p class=\"film-card__info--title\">\n        ${film.title}\n        </p>\n        <p class=\"film-card__info--subtitle\">\n        ${genres(film)} | ${film.release_date.split('-')[0]}\n        </p>\n    </div>\n</div>\n</a>`;\n  cardsFilm.insertAdjacentHTML('beforeend', markup);\n};\n\nconst ids = movies => {\n  const arrOdIds = [];\n  for (const movie of movies) {\n    arrOdIds.push(movie.id);\n  }\n  return arrOdIds;\n};\n\nexport const genres = film => {\n  const arrayOfGenres = [];\n  for (const genre of film.genres) {\n    arrayOfGenres.push(genre.name);\n  }\n\n  return arrayOfGenres.join(', ');\n};\n\nfunction searchFilms(eve) {\n  eve.preventDefault();\n  searchFilms1();\n  searchMovie = input.value;\n}\nasync function searchFilms1() {\n  try {\n    const popularFilms = await api.fetchMoviesByName(input.value, 1);\n    searchMovie = input.value;\n    const movies = popularFilms;\n\n    cardsFilm.innerHTML = '';\n    spinner.classList.remove('hidden');\n    ids(movies).map(index => {\n      api\n        .fetchMoviesByID(index)\n        .then(film => {\n          createFilmCards(film);\n        })\n        .catch(error => console.error(error));\n    });\n  } catch (error) {\n    console.log(error);\n  }\n  createPageHome(api.totalPage, 1);\n  spinner.classList.add('hidden');\n  input.value = '';\n}\n\nasync function searchFilms2(filmName,page) {\n  try {\n    const popularFilms = await api.fetchMoviesByName(filmName, page);\n    const movies = popularFilms;\n    cardsFilm.innerHTML = '';\n    spinner.classList.remove('hidden');\n    ids(movies).map(index => {\n      api\n        .fetchMoviesByID(index)\n        .then(film => {\n          createFilmCards(film);\n        })\n        .catch(error => console.error(error));\n    });\n  } catch (error) {\n    console.log(error);\n  }\n  createPageHome(api.totalPage, page);\n  spinner.classList.add('hidden');\n}\nasync function loadPopularFilms(page) {\n  try {\n    spinner.classList.remove('hidden');\n    const popularFilms = await api.fetchMovies(page);\n    // const popularFilms = await api.fetchMoviesByName(searchMovie, 1);\n    const movies = popularFilms;\n    ids(movies).map(index => {\n      api\n        .fetchMoviesByID(index)\n        .then(film => {\n          createFilmCards(film);\n        })\n        .catch(error => console.error(error));\n    });\n  } catch (error) {\n    console.log(error);\n  }\n  spinner.classList.add('hidden');\n}\n\nasync function openCardFilm(eve) {\n  eve.preventDefault();\n  try {\n    const infoFilm = await api.fetchMoviesByID(eve.target.id);\n    modalCardFilm.createModalContent(infoFilm);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n/************************************************************************************************************************************************/\nloadPopularFilms();\n\ncreatePageHome(api.totalPage, 1);\nplusArrow.addEventListener('click', addingArrow);\nboxPages.addEventListener('click', selectPages);\nminusArrow.addEventListener('click', substractingArrow);\nexport { loadPopularFilms, searchMovie, searchFilms2 };\n","let arrowPage = 1;\nconst cardsFilm = document.querySelector('.section-films');\nconst paginacjaHome = document.querySelector('.page');\nlet plusArrow = document.querySelector('#plus');\nlet minusArrow = document.querySelector('#minus');\nimport { loadPopularFilms, searchMovie, searchFilms2 } from '../index';\nimport { totalPage } from './api_films_database';\nlet stopNumber= 0;\n// ********************************************************************************************************************************************\nfunction createPage(numberOfPages, selectPage) {\n  let data = [];\n  if (numberOfPages === 1) {\n    plusArrow.classList.add('hidden');\n    minusArrow.classList.add('hidden');\n    data.push(`<li class=\"page__numbers\" id=\"page__selected\">${1}</li>`);\n    return data.join('');\n  } else if (numberOfPages < 8) {\n    plusArrow.classList.remove('hidden');\n    minusArrow.classList.remove('hidden');\n    for (let index = 1; index < numberOfPages + 1; index++) {\n      if (index == selectPage) {\n        data.push(`<li class=\"page__numbers\" id=\"page__selected\">${index}</li>`);\n      } else {\n        data.push(`<li class=\"page__numbers\">${index}</li>`);\n      }\n    }\n    return data.join('');\n  } else {\n    //***************************************************************************\n    plusArrow.classList.remove('hidden');\n    minusArrow.classList.remove('hidden');\n    if (selectPage == 1) {\n      data.push(`<li class=\"page__numbers\" id=\"page__selected\">${1}</li>`);\n    } else {\n      data.push(`<li class=\"page__numbers\">${1}</li>`);\n    }\n    data.push(`<li class=\"page__dots\"> ... </li>`);\n    // numberOfPages/2 -3\n    let startNumber = Math.floor(numberOfPages / 2 - 2);\n    if (selectPage > 1) {\n      startNumber = selectPage - 2;\n    }\n    stopNumber = startNumber + 5;\n    if (numberOfPages < selectPage + 4) {\n      startNumber = numberOfPages - 5;\n      stopNumber = numberOfPages;\n    }\n    if (selectPage < 4 && selectPage !== 1) {\n      startNumber = 2;\n      stopNumber = startNumber + 5;\n    }\n    for (let index = startNumber; index < stopNumber; index++) {\n      if (index == selectPage) {\n        data.push(`<li class=\"page__numbers\" id=\"page__selected\">${index}</li>`);\n      } else {\n        data.push(`<li class=\"page__numbers\">${index}</li>`);\n      }\n    }\n    data.push(`<li class=\"page__dots\"> ... </li>`);\n    if (selectPage == numberOfPages) {\n      data.push(`<li class=\"page__numbers\" id=\"page__selected\">${numberOfPages}</li>`);\n    } else {\n      data.push(`<li class=\"page__numbers\">${numberOfPages}</li>`);\n    }\n    //***************************************************************************\n    return data.join('');\n  }\n}\nexport function createPageHome(numbers, selectPage) {\n  paginacjaHome.innerHTML = createPage(numbers, selectPage);\n}\nexport function nextPage() {\n  createPageHome(20, ++arrowPage);\n}\nexport function previousePage() {\n  createPageHome(20, --arrowPage);\n}\nfunction selectPages(event) {\n  const selectedPage = event.target.textContent;\n  cardsFilm.innerHTML = '';\n  arrowPage = parseInt(selectedPage);\n \n  if (searchMovie === '') {\n    createPageHome(totalPage, arrowPage);\n    loadPopularFilms(arrowPage);\n  } else {\n    createPageHome(totalPage, arrowPage);\n    searchFilms2(searchMovie, arrowPage);\n    //searchMovie(arrowPage);\n  }\n}\nfunction substractingArrow() {\n  if (arrowPage === 1) {\n    return;\n  }\n  arrowPage -= 1;\n  cardsFilm.innerHTML = '';\n  if (searchMovie === '') {\n    createPageHome(totalPage, arrowPage);\n    loadPopularFilms(arrowPage);\n  } else {\n    createPageHome(totalPage, arrowPage);\n    searchFilms2(searchMovie, arrowPage);\n    //searchMovie(arrowPage);\n  }\n}\nfunction addingArrow() {\n  if (arrowPage === 500 || arrowPage === totalPage) {\n    return;\n  }\n  arrowPage += 1;\n  cardsFilm.innerHTML = '';\n  if (searchMovie === '') {\n    createPageHome(totalPage, arrowPage);\n    loadPopularFilms(arrowPage);\n  } else {\n    createPageHome(totalPage, arrowPage);\n    searchFilms2(searchMovie, arrowPage);\n    //searchMovie(arrowPage);\n  }\n}\nexport { substractingArrow, addingArrow, selectPages, totalPage };\n"],"names":["$5zJd0","parcelRequire","$d5da0edcc77ff959$var$arrowPage","$d5da0edcc77ff959$var$cardsFilm","document","querySelector","$d5da0edcc77ff959$var$paginacjaHome","$d5da0edcc77ff959$var$plusArrow","$d5da0edcc77ff959$var$minusArrow","$d5da0edcc77ff959$var$stopNumber","$d5da0edcc77ff959$export$fd24319100143921","numbers","selectPage","innerHTML","numberOfPages","data","classList","add","push","join","remove","index","startNumber","Math","floor","$d5da0edcc77ff959$var$createPage","$1cb340a3d58589e5$var$searchForm","$1cb340a3d58589e5$var$input","$1cb340a3d58589e5$var$cardsFilm","$1cb340a3d58589e5$var$spinner","$1cb340a3d58589e5$var$plusArrow","$1cb340a3d58589e5$var$minusArrow","$1cb340a3d58589e5$var$boxPages","$1cb340a3d58589e5$export$dd14e5c8db127693","addEventListener","eve","preventDefault","async","popularFilms","fetchMoviesByName","value","movies","$1cb340a3d58589e5$var$ids","map","fetchMoviesByID","then","film","$1cb340a3d58589e5$var$createFilmCards","catch","error","console","log","totalPage","$1cb340a3d58589e5$var$searchFilms1","infoFilm","target","id","$hfaIS","createModalContent","imgSRC","IMG_URL","poster_path","undefined","markup","title","$1cb340a3d58589e5$export$be3a0ca764f9df2b","release_date","split","insertAdjacentHTML","arrOdIds","movie","arrayOfGenres","genre","genres","name","$1cb340a3d58589e5$export$199156543456424c","filmName","page","$1cb340a3d58589e5$export$8f4f25334f43e497","fetchMovies","event","selectedPage","textContent","parseInt"],"version":3,"file":"index.5d9f443b.js.map"}